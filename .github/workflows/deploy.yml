name: Build & Deploy

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io/${{ github.repository }}

jobs:
  # ───────── build ─────────
  build:
    runs-on: [self-hosted, linux, debian, builder]
    outputs:
      img_tag: ${{ steps.meta.outputs.tag }}

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      # короткий SHA станет тегом образов
      - name: Compute image tag
        id: meta
        run: echo "tag=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - run: yarn install --frozen-lockfile

      # логинимся в GitHub Container Registry
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ⬆ Strapi-образ (контекст server/)
      - name: Build Strapi image
        uses: docker/build-push-action@v5
        with:
          context: server
          push: true
          tags: ${{ env.REGISTRY }}-strapi:${{ steps.meta.outputs.tag }}

      # ⬆ Front-образ (контекст client/)
      - name: Build Frontend image
        uses: docker/build-push-action@v5
        with:
          context: client
          push: true
          tags: ${{ env.REGISTRY }}-front:${{ steps.meta.outputs.tag }}

  # ───────── deploy ─────────
  deploy:
    needs: build
    runs-on: [self-hosted, linux, debian, vds]   # этот runner работает прямо на VDS
    env:
      TAG: ${{ needs.build.outputs.img_tag }}

    steps:
      - name: Pull & restart containers
        run: |
          cd /home/deploy/app
          export TAG=${TAG}
          docker compose pull
          docker compose up -d
          docker image prune -f --filter "until=24h"
